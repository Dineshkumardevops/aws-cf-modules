AWSTemplateFormatVersion: "2010-09-09"
Description: AWS CloudFormation StackSet to deploy ECS resources with Networking

Parameters:
  StackSetAdminRole:
    Type: String
    Description: The IAM role ARN for StackSet Administration

  ExecutionRole:
    Type: String
    Description: The IAM role ARN for StackSet Execution

  VpcCidr:
    Type: String
    Default: "10.0.0.0/16"
    Description: The CIDR block for the VPC

  PublicSubnetCidr:
    Type: String
    Default: "10.0.1.0/24"
    Description: The CIDR block for the public subnet

  PrivateSubnetCidr:
    Type: String
    Default: "10.0.2.0/24"
    Description: The CIDR block for the private subnet

  AvailabilityZone:
    Type: String
    Default: "ap-southeast-2a"
    Description: The Availability Zone for the subnets

  PublicAccessCidr:
    Type: String
    Default: "0.0.0.0/0"
    Description: CIDR block for public access. Change for more security.

Resources:
  # Stack to create the VPC and Internet Gateway
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "https://s3.amazonaws.com/ecs-resources/vpc.yaml"
      Parameters:
        VpcCidr: !Ref VpcCidr
      Tags:
        - Key: Name
          Value: VPCStack

  # Stack to create the Route Tables
  RouteTableStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPCStack
    Properties:
      TemplateURL: "https://s3.amazonaws.com/ecs-resources/route-table.yaml"
      Parameters:
        VpcId: !GetAtt VPCStack.Outputs.VPCId
        InternetGatewayId: !GetAtt VPCStack.Outputs.InternetGatewayId
      Tags:
        - Key: Name
          Value: RouteTableStack

  # Stack to create the Network ACL
  NACLStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPCStack
    Properties:
      TemplateURL: "https://s3.amazonaws.com/ecs-resources/nacl.yaml"
      Parameters:
        VpcId: !GetAtt VPCStack.Outputs.VPCId
      Tags:
        - Key: Name
          Value: NACLStack

  # Stack to create the Public & Private Subnets
  SubnetStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
      - RouteTableStack
      - NACLStack
    Properties:
      TemplateURL: "https://s3.amazonaws.com/ecs-resources/subnet.yaml"
      Parameters:
        PublicSubnetCidr: !Ref PublicSubnetCidr
        PrivateSubnetCidr: !Ref PrivateSubnetCidr
        AvailabilityZone: !Ref AvailabilityZone
      Tags:
        - Key: Name
          Value: SubnetStack

  # Stack to create Security Groups
  SecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: SubnetStack
    Properties:
      TemplateURL: "https://s3.amazonaws.com/ecs-resources/security-groups.yaml"
      Parameters:
        VpcId: !GetAtt VPCStack.Outputs.VPCId
        PublicAccessCidr: !Ref PublicAccessCidr
      Tags:
        - Key: Name
          Value: SecurityGroupStack

  # Stack to create NAT Gateway and Update Private Route Table
  NATGatewayStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - SubnetStack
      - RouteTableStack
    Properties:
      TemplateURL: "https://s3.amazonaws.com/ecs-resources/nat-gateway.yaml"
      Parameters:
        VpcId: !GetAtt VPCStack.Outputs.VPCId
        PublicSubnetId: !ImportValue SubnetStack-PublicSubnetId
        PrivateRouteTableId: !ImportValue RouteTableStack-PrivateRouteTableId
      Tags:
        - Key: Name
          Value: NATGatewayStack

Outputs:
  PublicSecurityGroupId:
    Description: Public Security Group ID
    Value: !ImportValue SecurityGroupStack-PublicSecurityGroupId
    Export:
      Name: !Sub "${AWS::StackName}-PublicSecurityGroupId"
      
  PrivateSecurityGroupId:
    Description: Private Security Group ID
    Value: !ImportValue SecurityGroupStack-PrivateSecurityGroupId
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSecurityGroupId"

  NatGatewayId:
    Description: NAT Gateway ID
    Value: !ImportValue NATGatewayStack-NatGatewayId
    Export:
      Name: !Sub "${AWS::StackName}-NatGatewayId"
